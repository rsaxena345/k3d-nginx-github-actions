name: Secure CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run Semgrep SAST
        uses: returntocorp/semgrep-action@v1

  deploy:
    runs-on: ubuntu-latest
    needs: scan
    steps:
      - uses: actions/checkout@v3

      - name: Create k3d Cluster
        uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: "ci-cluster"
          args: -p "8080:30080@server:0"

      - name: Set KUBECONFIG
        run: echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

      - name: Deploy to k3d cluster
        run: kubectl apply -f nginx-deployment.yaml

      - name: Deploy nginx service
        run: kubectl apply -f nginx-service.yaml

      - name: Wait for nginx
        run: |
          for i in {1..30}; do
            if curl -sSf http://localhost:8080 > /dev/null; then
              echo "nginx is up!"
              exit 0
            fi
            echo "Waiting for nginx..."
            sleep 5
          done
          echo "nginx did not become ready in time" >&2
          exit 1

  dast:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Ensure Java is installed
        run: sudo apt-get update && sudo apt-get install -y openjdk-17-jre

      - name: Download and Extract Latest ZAP (Linux)
        run: |
          curl -s https://api.github.com/repos/zaproxy/zaproxy/releases/latest \
            | grep "browser_download_url.*Linux.tar.gz" \
            | cut -d '"' -f 4 \
            | wget -i -
          LINUX_TARBALL=$(ls ZAP_*_Linux.tar.gz)
          mkdir -p $HOME/zap
          tar -xzf "$LINUX_TARBALL" -C $HOME/zap --strip-components=1

      - name: Run ZAP Baseline Scan
        run: |
          $HOME/zap/zap.sh -cmd -quickurl http://localhost:8080 -quickout zap_report.html

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_report.html
